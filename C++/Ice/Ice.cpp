// Мороженое. Имеется список сортов, которые будут представлены на фестивале мороженого. 
// Известно, что этот список был составлен из списков от нескольких разных производителей: 
// сначала идут сорта от первого производителя, потом - от второго и т.д. 
// Сорта от каждого производителя различны, но в общем списке могут встречаться повторения. 
// Ваша задача - определить минимально возможное количество производителей мороженого.
//
// Входные данные
// В первой строке содержится целое число n - количество элементов в списке сортов.
// В каждой из следующих n строк содержится по одному наименованию сорта.
// Наименование сорта - непустая последовательность строчных латинских букв и цифр 
// длиной не более 30 символов и начинающаяся с буквы.
//
// Выходные данные
// Выведите единственное целое число - минимально возможное количество производителей мороженого.
//
// Решение жадным алгоритмом

#include <iostream>
#include <fstream>
#include <forward_list>

using namespace std;

int main()
{
	setlocale(LC_ALL, "ru");

	int n, cnt;
	string fn;
	ifstream cinf;

	cout << "Введите имя файла" << endl;
	cin >> fn;
	cinf.open(fn);
	cinf >> n;

	forward_list<string> li;
	string item;

	cnt = 1;
	for (int i = 0; i < n; i++)     // сорта мороженого при считывании записываются в список
	{
		cinf >> item;
		if (li.empty()) li.push_front(item);
		else
		{
			for (auto it : li)      // если очередной сорт уже есть в списке, 
			{                       // суммируется производитель, список начинается с начала
				if (item == it)
				{
					cnt++;
					li.clear();
					break;
				}
			}
			li.push_front(item);
		}
	}
	cinf.close();

	cout << cnt << endl;

	system("pause");
	return 0;
}
