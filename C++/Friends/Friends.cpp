// Друзья. Имеется n человек, некоторые пары из которых дружат между собой. 
// Отношение дружбы симметрично, то есть если A дружит с B, то и B дружит с A. 
// Нужно составить компанию наибольшего размера, в которой каждая пара людей дружит между собой.
//
// Входные данные
// В первой строке заданы два натуральных числа n и m - общее число людей и 
// количество пар друзей, соответственно. Следующие m строк содержат пары номеров друзей.
// Люди нумеруются числами от 1 до n. Гарантируется, что каждая пара встречается во входном файле 
// один раз и не может содержать два одинаковых числа.
//
// Выходные данные
// Выведите одно целое число - наибольший размер компании, в которой все попарно друзья.
//
// Решение битовыми масками

#include <iostream>
#include <fstream>
#include <vector>

//#define DEBUG

using namespace std;

int main()
{
    setlocale(LC_ALL, "ru");

    int n, m, smax;
    string fn;
    ifstream cinf;

    cout << "Введите имя файла" << endl;
    cin >> fn;
    cinf.open(fn);
    cinf >> n >> m;

    vector<vector<int>> a(n, vector<int>(n, 0));
    for (int i = 0; i < n; i++)
        a[i][i] = 1;

    for (int k = 0; k < m; k++)
    {
        int i, j;
        cinf >> i >> j;
        a[i - 1][j - 1] = 1;
        a[j - 1][i - 1] = 1;
    }
    cinf.close();

#ifdef DEBUG
    cout << endl;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
            cout << a[i][j] << " ";
        cout << endl;
    }
#endif

    smax = 0;
    for (int i = 0; i < (1 << n); i++)  // перебор всех кампаний и проверка, что в кампании все дружат со всеми
    {
        int s = 0;
        for (int j = 0; j < n; j++)
        {
            int t = 0;
            if (i & (1 << j))
            {
                t = 1;
                for (int k = 0; k < n; k++)
                    if (i & (1 << k))
                        t &= a[k][j];
            }
            s += t;
        }
        if (s > smax) smax = s;
    }
    cout << smax << endl;

    system("pause");
    return 0;
}

